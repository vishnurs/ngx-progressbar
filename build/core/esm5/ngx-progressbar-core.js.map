{
  "version": 3,
  "file": "ngx-progressbar-core.js",
  "sources": [
    "ng://@ngx-progressbar/core/out/ng-progress.module.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.component.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.service.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.token.ts",
    "ng://@ngx-progressbar/core/out/ng-progress-ref.ts"
  ],
  "sourcesContent": [
    "import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgProgressComponent } from './ng-progress.component';\nimport { NgProgress } from './ng-progress.service';\nimport { NgProgressConfig } from './ng-progress.interface';\nimport { CONFIG } from './ng-progress.token';\n\nexport function NgProgressFactory(config: NgProgressConfig) {\n  return new NgProgress(config);\n}\n\n@NgModule({\n  declarations: [NgProgressComponent],\n  exports: [NgProgressComponent],\n  imports: [CommonModule]\n})\nexport class NgProgressModule {\n  static forRoot(config?: NgProgressConfig): ModuleWithProviders {\n    return {\n      ngModule: NgProgressModule,\n      providers: [\n        {provide: CONFIG, useValue: config},\n        {\n          provide: NgProgress,\n          useFactory: NgProgressFactory,\n          deps: [CONFIG]\n        }\n      ]\n    };\n  }\n}\n",
    "/**\n * @license\n * Copyright ngx-progressbar All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/MurhafSousli/ngx-progressbar/blob/master/LICENSE\n */\n\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NgProgress } from './ng-progress.service';\nimport { NgProgressRef } from './ng-progress-ref';\nimport { NgProgressState } from './ng-progress.interface';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators/map';\n\n@Component({\n  selector: 'ng-progress',\n  host: {\n    'role': 'progressbar',\n    '[attr.spinnerPosition]': 'spinnerPosition',\n    '[attr.dir]': 'direction',\n    '[attr.thick]': 'thick'\n  },\n  template: `\n    <ng-container *ngIf=\"state$ | async; let state\">\n      <div class=\"ng-progress-bar\"\n            [class.-active]=\"state.active\"\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\n        <div class=\"ng-bar-placeholder\">\n          <div class=\"ng-bar\"\n                [style.transform]=\"state.transform\"\n                [style.backgroundColor]=\"color\"\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\n          </div>\n        </div>\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\n          <div class=\"ng-spinner-icon\"\n                [style.borderTopColor]=\"color\"\n                [style.borderLeftColor]=\"color\"></div>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  styles: [`ng-progress{z-index:999999;pointer-events:none;position:relative}.ng-progress-bar{z-index:999999;top:0;left:0;width:100%;position:fixed;zoom:1;opacity:0}.ng-progress-bar.-active{opacity:1;-webkit-transition:none;transition:none}.ng-bar-placeholder{position:absolute;height:2px;width:100%}.ng-bar{width:100%;height:100%;-webkit-transform:translate(-100%,0,0);transform:translate(-100%,0,0)}.ng-meteor{display:block;position:absolute;width:100px;height:100%;opacity:1}.ng-spinner{display:block;position:fixed;z-index:1031;top:15px}.ng-spinner-icon{width:18px;height:18px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-animation:.4s linear infinite spinner-animation;animation:.4s linear infinite spinner-animation;border:2px solid transparent;border-radius:50%}[dir='ltr+'] .ng-meteor,[dir=ltr-] .ng-meteor{-webkit-transform:rotate(3deg);transform:rotate(3deg)}[dir='ltr+'][thick=true] .ng-meteor,[dir=ltr-][thick=true] .ng-meteor{-webkit-transform:rotate(4deg);transform:rotate(4deg)}[dir='ltr+'] .ng-bar,[dir='rtl+'] .ng-bar{margin-left:-100%}[dir='ltr+'] .ng-meteor,[dir='rtl+'] .ng-meteor{right:0}[dir='ltr+'] .ng-meteor,[dir=rtl-] .ng-meteor{top:-3px}[dir='ltr+'][thick=true] .ng-meteor,[dir=rtl-][thick=true] .ng-meteor{top:-4px}[dir='rtl+'] .ng-meteor,[dir=ltr-] .ng-meteor{bottom:-3px}[dir='rtl+'][thick=true] .ng-meteor,[dir=ltr-][thick=true] .ng-meteor{bottom:-4px}[dir='rtl+'] .ng-bar-placeholder,[dir=ltr-] .ng-bar-placeholder{-webkit-transform:rotate(180deg);transform:rotate(180deg)}[dir='rtl+'] .ng-spinner-icon,[dir=ltr-] .ng-spinner-icon{animation-direction:reverse}[dir='rtl+'] .ng-meteor,[dir=rtl-] .ng-meteor{-webkit-transform:rotate(-3deg);transform:rotate(-3deg)}[dir='rtl+'][thick=true] .ng-meteor,[dir=rtl-][thick=true] .ng-meteor{-webkit-transform:rotate(-4deg);transform:rotate(-4deg)}[thick=true] .ng-spinner-icon{width:24px;height:24px;border-width:3px}[thick=true] .ng-bar-placeholder{height:3px}[spinnerPosition=left] .ng-spinner{left:15px;right:unset}[spinnerPosition=right] .ng-spinner{right:15px}@-webkit-keyframes spinner-animation{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-animation{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\n\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\n\n  private _started$: Subscription;\n  private _completed$: Subscription;\n\n  /** Progress bar worker */\n  progressRef: NgProgressRef;\n\n  /** Progress state stream */\n  state$: Observable<{ active: boolean, transform: string }>;\n\n  /** Creates a new instance if id is not already exists */\n  @Input() id = 'root';\n\n  /** Initializes inputs from the global config */\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\n  @Input() ease: string = this._ngProgress.config.ease;\n  @Input() color: string = this._ngProgress.config.color;\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\n  @Input() thick: boolean = this._ngProgress.config.thick;\n  @Input() max: number = this._ngProgress.config.max;\n  @Input() min: number = this._ngProgress.config.min;\n  @Input() speed: number = this._ngProgress.config.speed;\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\n  @Output() started = new EventEmitter();\n  @Output() completed = new EventEmitter();\n\n  constructor(private _ngProgress: NgProgress) {\n  }\n\n  ngOnChanges() {\n    if (this.progressRef instanceof NgProgressRef) {\n      // Update progress bar config when inputs change\n      this.progressRef.setConfig({\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\n        speed: this.speed,\n        trickleSpeed: this.trickleSpeed,\n        trickleFunc: this.trickleFunc,\n        debounceTime: this.debounceTime\n      });\n    }\n  }\n\n  ngOnInit() {\n    // Get progress bar service instance\n    this.progressRef = this._ngProgress.ref(this.id, {\n      max: this.max,\n      min: this.min,\n      speed: this.speed,\n      trickleSpeed: this.trickleSpeed,\n      debounceTime: this.debounceTime\n    });\n    this.state$ = this.progressRef.state$.pipe(map((state: NgProgressState) => ({\n      active: state.active,\n      transform: `translate3d(${state.value}%,0,0)`\n    })));\n    /** Subscribes to started and completed events when user used them */\n    if (this.started.observers.length) {\n      this._started$ = this.progressRef.started.subscribe(() => this.started.emit());\n    }\n    if (this.completed.observers.length) {\n      this._completed$ = this.progressRef.completed.subscribe(() => this.completed.emit());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._started$) {\n      this._started$.unsubscribe();\n    }\n    if (this._completed$) {\n      this._completed$.unsubscribe();\n    }\n    this._ngProgress.destroy(this.id);\n  }\n\n  start() {\n    this.progressRef.start();\n  }\n\n  complete() {\n    this.progressRef.complete();\n  }\n\n  inc(n?: number) {\n    this.progressRef.inc(n);\n  }\n\n  set(n: number) {\n    this.progressRef.set(n);\n  }\n\n  get isStarted() {\n    return this.progressRef.isStarted;\n  }\n}\n",
    "import { Injectable, Inject, Optional } from '@angular/core';\nimport { NgProgressRef } from './ng-progress-ref';\nimport { NgProgressConfig } from './ng-progress.interface';\nimport { empty } from 'rxjs/observable/empty';\nimport { CONFIG } from './ng-progress.token';\n\nconst defaultConfig: NgProgressConfig = {\n  meteor: true,\n  spinner: true,\n  thick: false,\n  ease: 'linear',\n  spinnerPosition: 'right',\n  direction: 'ltr+',\n  color: '#1B95E0',\n  max: 100,\n  min: 8,\n  speed: 200,\n  trickleSpeed: 300,\n  debounceTime: 0,\n  trickleFunc: (n: number): number => {\n    if (n >= 0 && n < 20) return 10;\n    if (n >= 20 && n < 50) return 4;\n    if (n >= 50 && n < 80) return 2;\n    if (n >= 80 && n < 99) return 0.5;\n    return 0;\n  }\n};\n\n@Injectable()\nexport class NgProgress {\n\n  /** Stores NgProgressRef instances */\n  private readonly _instances = {};\n\n  /** Global config */\n  config: NgProgressConfig;\n\n  constructor(@Optional() @Inject(CONFIG) config: NgProgressConfig) {\n    this.config = {...defaultConfig, ...config};\n  }\n\n  /**\n   * Returns NgProgressRef by ID\n   */\n  ref(id = 'root', config?: NgProgressConfig) {\n    if (this._instances[id] instanceof NgProgressRef) {\n      return this._instances[id];\n    } else {\n      config = {...this.config, ...config};\n      return this._instances[id] = new NgProgressRef(config);\n    }\n  }\n\n  setConfig(config: NgProgressConfig, id = 'root') {\n    if (this._instances[id] instanceof NgProgressRef) {\n      this._instances[id].setConfig(config);\n    }\n  }\n\n  start(id = 'root') {\n    if (this._instances[id] instanceof NgProgressRef) {\n      this._instances[id].start();\n    }\n  }\n\n  set(n: number, id = 'root') {\n    if (this._instances[id] instanceof NgProgressRef) {\n      this._instances[id].set(n);\n    }\n  }\n\n  inc(n?: number, id = 'root') {\n    if (this._instances[id] instanceof NgProgressRef) {\n      this._instances[id].inc(n);\n    }\n  }\n\n  complete(id = 'root') {\n    if (this._instances[id] instanceof NgProgressRef) {\n      this._instances[id].complete();\n    }\n  }\n\n  isStarted(id = 'root') {\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].isStarted : false;\n  }\n\n  started(id = 'root') {\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].started : empty();\n  }\n\n  completed(id = 'root') {\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].ended : empty();\n  }\n\n  destroy(id = 'root') {\n    if (this._instances[id] instanceof NgProgressRef) {\n      this._instances[id].destroy();\n      this._instances[id] = null;\n    }\n  }\n\n  destroyAll() {\n    Object.keys(this._instances).map((key) => {\n      this._instances[key].destroy();\n      this._instances[key] = null;\n    });\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\nimport { NgProgressConfig } from './ng-progress.interface';\n\nexport const CONFIG = new InjectionToken<NgProgressConfig>('config');\n",
    "import { NgProgressState, NgProgressConfig } from './ng-progress.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { timer } from 'rxjs/observable/timer';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { of } from 'rxjs/observable/of';\nimport { tap } from 'rxjs/operators/tap';\nimport { map } from 'rxjs/operators/map';\nimport { skip } from 'rxjs/operators/skip';\nimport { delay } from 'rxjs/operators/delay';\nimport { filter } from 'rxjs/operators/filter';\nimport { debounce } from 'rxjs/operators/debounce';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { combineLatest} from 'rxjs/operators/combineLatest';\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\n\nexport class NgProgressRef {\n\n  private _state: NgProgressState = {active: false, value: 0};\n  private _config: NgProgressConfig;\n\n  /** Stream that increments and updates progress state */\n  private _trickling$ = new Subject();\n\n  /** Stream that emits when progress state is changed */\n  state$ = new BehaviorSubject<NgProgressState>(this._state);\n\n  /** Stream that emits when config is changed */\n  config$ = new Subject<NgProgressConfig>();\n\n  get isStarted(): boolean {\n    return this._state.active;\n  }\n\n  /** Progress start event */\n  get started(): Observable<boolean> {\n    return this.state$.pipe(\n      map((state: NgProgressState) => state.active),\n      distinctUntilChanged(),\n      filter(active => active)\n    );\n  }\n\n  /** Progress ended event */\n  get completed(): Observable<boolean> {\n    return this.state$.pipe(\n      map((state: NgProgressState) => state.active),\n      distinctUntilChanged(),\n      filter(active => !active),\n      skip(1)\n    );\n  }\n\n  constructor(customConfig: NgProgressConfig) {\n\n    /**\n     * Trickling stream starts the timer that increment the progress bar continuously\n     * This stream makes it possible to use latest config values while incrementing\n     */\n    this._trickling$.pipe(\n      debounce((start: boolean) => timer(start ? this._config.debounceTime : 0)),\n      combineLatest(this.config$),\n      switchMap(([start, config]: [boolean, NgProgressConfig]) => start ? this._trickling(config) : this._complete(config))\n    ).subscribe();\n\n    this.setConfig(customConfig);\n  }\n\n  start() {\n    this._trickling$.next(true);\n  }\n\n  complete() {\n    this._trickling$.next(false);\n  }\n\n  inc(amount?: number) {\n    const n = this._state.value;\n    if (!this.isStarted) {\n      this.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = this._config.trickleFunc(n);\n      }\n      this.set(n + amount);\n    }\n  }\n\n  set(n: number) {\n    this._setState({value: this._clamp(n), active: true});\n  }\n\n  setConfig(config: NgProgressConfig) {\n    this._config = {...this._config, ...config};\n    this.config$.next(this._config);\n  }\n\n  /**\n   * Meant to be used internally and not by user directly\n   * Users should use NgProgressManager.destroy(id) instead\n   */\n  destroy() {\n    this._trickling$.complete();\n    this.state$.complete();\n    this.config$.complete();\n  }\n\n  private _setState(state: NgProgressState) {\n    this._state = {...this._state, ...state};\n    this.state$.next(this._state);\n  }\n\n  /** Clamps a value to be between min and max */\n  private _clamp(n): number {\n    return Math.max(this._config.min, Math.min(this._config.max, n));\n  }\n\n  /** Keeps incrementing the progress */\n  private _trickling(config: NgProgressConfig) {\n    if (!this.isStarted) {\n      this.set(this._config.min);\n    }\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\n  }\n\n  /** Completes then resets the progress */\n  private _complete(config: NgProgressConfig) {\n    return !this.isStarted ? of({}) : of({}).pipe(\n      // Completes the progress\n      tap(() => this._setState({value: 100})),\n\n      // Hides the progress bar after a tiny delay\n      delay(config.speed * 1.7),\n      tap(() => this._setState({active: false})),\n\n      // Resets the progress state\n      delay(config.speed),\n      tap(() => this._setState({value: 0}))\n    );\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
