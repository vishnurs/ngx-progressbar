{
  "version": 3,
  "file": "ng-progress.component.js",
  "sources": [
    "ng://@ngx-progressbar/core/projects/core/src/lib/ng-progress.component.ts"
  ],
  "sourcesContent": [
    "/**\n * @license\n * Copyright ngx-progressbar All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/MurhafSousli/ngx-progressbar/blob/master/LICENSE\n */\n\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NgProgress } from './ng-progress.service';\nimport { NgProgressRef } from './ng-progress-ref';\nimport { NgProgressState } from './ng-progress.interface';\nimport { Observable, Subscription} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'ng-progress',\n  host: {\n    'role': 'progressbar',\n    '[attr.spinnerPosition]': 'spinnerPosition',\n    '[attr.dir]': 'direction',\n    '[attr.thick]': 'thick'\n  },\n  template: `\n    <ng-container *ngIf=\"state$ | async; let state\">\n      <div class=\"ng-progress-bar\"\n            [class.-active]=\"state.active\"\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\n        <div class=\"ng-bar-placeholder\">\n          <div class=\"ng-bar\"\n                [style.transform]=\"state.transform\"\n                [style.backgroundColor]=\"color\"\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\n          </div>\n        </div>\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\n          <div class=\"ng-spinner-icon\"\n                [style.borderTopColor]=\"color\"\n                [style.borderLeftColor]=\"color\"></div>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  styles: [`ng-progress{z-index:999999;pointer-events:none;position:relative}.ng-progress-bar{z-index:999999;top:0;left:0;width:100%;position:fixed;zoom:1;opacity:0}.ng-progress-bar.-active{opacity:1;transition:none}.ng-bar-placeholder{position:absolute;height:2px;width:100%}.ng-bar{width:100%;height:100%;-webkit-transform:translate(-100%,0,0);transform:translate(-100%,0,0)}.ng-meteor{display:block;position:absolute;width:100px;height:100%;opacity:1}.ng-spinner{display:block;position:fixed;z-index:1031;top:15px}.ng-spinner-icon{width:18px;height:18px;box-sizing:border-box;-webkit-animation:.4s linear infinite spinner-animation;animation:.4s linear infinite spinner-animation;border:2px solid transparent;border-radius:50%}[dir='ltr+'] .ng-meteor,[dir=ltr-] .ng-meteor{-webkit-transform:rotate(3deg);transform:rotate(3deg)}[dir='ltr+'][thick=true] .ng-meteor,[dir=ltr-][thick=true] .ng-meteor{-webkit-transform:rotate(4deg);transform:rotate(4deg)}[dir='ltr+'] .ng-bar,[dir='rtl+'] .ng-bar{margin-left:-100%}[dir='ltr+'] .ng-meteor,[dir='rtl+'] .ng-meteor{right:0}[dir='ltr+'] .ng-meteor,[dir=rtl-] .ng-meteor{top:-3px}[dir='ltr+'][thick=true] .ng-meteor,[dir=rtl-][thick=true] .ng-meteor{top:-4px}[dir='rtl+'] .ng-meteor,[dir=ltr-] .ng-meteor{bottom:-3px}[dir='rtl+'][thick=true] .ng-meteor,[dir=ltr-][thick=true] .ng-meteor{bottom:-4px}[dir='rtl+'] .ng-bar-placeholder,[dir=ltr-] .ng-bar-placeholder{-webkit-transform:rotate(180deg);transform:rotate(180deg)}[dir='rtl+'] .ng-spinner-icon,[dir=ltr-] .ng-spinner-icon{animation-direction:reverse}[dir='rtl+'] .ng-meteor,[dir=rtl-] .ng-meteor{-webkit-transform:rotate(-3deg);transform:rotate(-3deg)}[dir='rtl+'][thick=true] .ng-meteor,[dir=rtl-][thick=true] .ng-meteor{-webkit-transform:rotate(-4deg);transform:rotate(-4deg)}[thick=true] .ng-spinner-icon{width:24px;height:24px;border-width:3px}[thick=true] .ng-bar-placeholder{height:3px}[spinnerPosition=left] .ng-spinner{left:15px;right:unset}[spinnerPosition=right] .ng-spinner{right:15px}@-webkit-keyframes spinner-animation{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-animation{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\n\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\n\n  private _started$: Subscription;\n  private _completed$: Subscription;\n\n  /** Progress bar worker */\n  progressRef: NgProgressRef;\n\n  /** Progress state stream */\n  state$: Observable<{ active: boolean, transform: string }>;\n\n  /** Creates a new instance if id is not already exists */\n  @Input() id = 'root';\n\n  /** Initializes inputs from the global config */\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\n  @Input() ease: string = this._ngProgress.config.ease;\n  @Input() color: string = this._ngProgress.config.color;\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\n  @Input() thick: boolean = this._ngProgress.config.thick;\n  @Input() max: number = this._ngProgress.config.max;\n  @Input() min: number = this._ngProgress.config.min;\n  @Input() speed: number = this._ngProgress.config.speed;\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\n  @Output() started = new EventEmitter();\n  @Output() completed = new EventEmitter();\n\n  constructor(private _ngProgress: NgProgress) {\n  }\n\n  ngOnChanges() {\n    if (this.progressRef instanceof NgProgressRef) {\n      // Update progress bar config when inputs change\n      this.progressRef.setConfig({\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\n        speed: this.speed,\n        trickleSpeed: this.trickleSpeed,\n        trickleFunc: this.trickleFunc,\n        debounceTime: this.debounceTime\n      });\n    }\n  }\n\n  ngOnInit() {\n    // Get progress bar service instance\n    this.progressRef = this._ngProgress.ref(this.id, {\n      max: this.max,\n      min: this.min,\n      speed: this.speed,\n      trickleSpeed: this.trickleSpeed,\n      debounceTime: this.debounceTime\n    });\n    this.state$ = this.progressRef.state$.pipe(map((state: NgProgressState) => ({\n      active: state.active,\n      transform: `translate3d(${state.value}%,0,0)`\n    })));\n    /** Subscribes to started and completed events when user used them */\n    if (this.started.observers.length) {\n      this._started$ = this.progressRef.started.subscribe(() => this.started.emit());\n    }\n    if (this.completed.observers.length) {\n      this._completed$ = this.progressRef.completed.subscribe(() => this.completed.emit());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._started$) {\n      this._started$.unsubscribe();\n    }\n    if (this._completed$) {\n      this._completed$.unsubscribe();\n    }\n    this._ngProgress.destroy(this.id);\n  }\n\n  start() {\n    this.progressRef.start();\n  }\n\n  complete() {\n    this.progressRef.complete();\n  }\n\n  inc(n?: number) {\n    this.progressRef.inc(n);\n  }\n\n  set(n: number) {\n    this.progressRef.set(n);\n  }\n\n  get isStarted() {\n    return this.progressRef.isStarted;\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
