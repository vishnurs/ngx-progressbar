{
  "version": 3,
  "file": "ngx-progressbar-http.js",
  "sources": [
    "ng://@ngx-progressbar/http/projects/http/src/lib/ng-progress-http.module.ts",
    "ng://@ngx-progressbar/http/projects/http/src/lib/ng-progress.interceptor.ts",
    "ng://@ngx-progressbar/http/projects/http/src/lib/ng-progress-http.token.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgProgressInterceptor } from './ng-progress.interceptor';\nimport { NgProgressHttpConfig } from './ng-progress-http.interface';\nimport { CONFIG } from './ng-progress-http.token';\n\nconst defaultConfig: NgProgressHttpConfig = {\n  silentApis: []\n}\n\n@NgModule({\n})\nexport class NgProgressHttpModule {\n  static forRoot(config?: NgProgressHttpConfig): ModuleWithProviders {\n    config = {...defaultConfig, ...config};\n    return {\n      ngModule: NgProgressHttpModule,\n      providers: [\n        { provide: CONFIG, useValue: config },\n        { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\n      ]\n    };\n  }\n}\n",
    "import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { NgProgress } from '@ngx-progressbar/core';\nimport { NgProgressHttpConfig } from './ng-progress-http.interface';\nimport { CONFIG } from './ng-progress-http.token';\n\n@Injectable()\nexport class NgProgressInterceptor implements HttpInterceptor {\n\n  private _inProgressCount = 0;\n\n  constructor(private _ngProgress: NgProgress, @Optional() @Inject(CONFIG) private _config?: NgProgressHttpConfig) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Ignore silent api requests\n    if (this.checkUrl(req)) {\n      return next.handle(req);\n    }\n\n    this._inProgressCount++;\n    if (!this._ngProgress.ref('root').isStarted) {\n      this._ngProgress.start();\n    }\n    return next.handle(req).pipe(finalize(() => {\n      this._inProgressCount--;\n      if (this._inProgressCount === 0) {\n        this._ngProgress.complete();\n      }\n    }));\n  }\n\n  /**\n   * Check if request is silent.\n   * @param req request\n   */\n  private checkUrl(req: HttpRequest<any>) {\n    const url = req.url.toLowerCase();\n    const found = this._config.silentApis.find((u) => url.startsWith(u));\n    return !!found;\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\nimport { NgProgressHttpConfig } from './ng-progress-http.interface';\n\nexport const CONFIG = new InjectionToken<NgProgressHttpConfig>('config');\n"
  ],
  "names": [],
  "mappings": ";;;;;;;;;AEAA,AAGO,uBAAM,MAAM,GAAG,IAAI,cAAc,CAAuB,QAAQ,CAAC,CAAC;;;;;;ADHzE,AASA,MAAA,qBAAA,CAAA;;;;;IAIE,WAAF,CAAsB,WAAuB,EAAsC,OAAnF,EAAA;QAAsB,IAAtB,CAAA,WAAiC,GAAX,WAAW,CAAY;QAAsC,IAAnF,CAAA,OAA0F,GAAP,OAAO,CAA1F;QAFA,IAAA,CAAA,gBAAA,GAA6B,CAAC,CAA9B;KAGG;;;;;;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB,EAApD;;QAEI,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE;YAC3C,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAA1C;YACM,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;aAC7B;SACF,CAAC,CAAC,CAAC;KACL;;;;;;IAMO,QAAQ,CAAC,GAAqB,EAAxC;QACI,uBAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAClC,uBAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,OAAO,CAAC,CAAC,KAAK,CAAC;;;;IAjCnB,EAAA,IAAA,EAAC,UAAU,EAAX;;;;IAJA,EAAA,IAAA,EAAS,UAAU,GAAnB;IASA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAgD,QAAQ,EAAxD,EAAA,EAAA,IAAA,EAA4D,MAAM,EAAlE,IAAA,EAAA,CAAmE,MAAM,EAAzE,EAAA,EAAA,EAAA;;;;;;;ADbA,AAMA,uBAAM,aAAa,GAAyB;IAC1C,UAAU,EAAE,EAAE;CACf,CAAA;AAID,AAAA,MAAA,oBAAA,CAAA;;;;;IACE,OAAO,OAAO,CAAC,MAA6B,EAA9C;QACI,MAAM,GAAV,MAAA,CAAA,MAAA,CAAA,EAAA,EAAiB,aAAa,EAAK,MAAM,CAAC,CAAC;QACvC,OAAO;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE;gBACrC,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;aAC7E;SACF,CAAC;KACH;;;IAZH,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU,EACT,EADD,EAAA;;;;;;;;;;;;;;;"
}
